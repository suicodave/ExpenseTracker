@using System.Net
@inject OrganizationAppState _organizationAppState


<EditForm Model="@_request"
    OnValidSubmit="HandleSubmit">
    <FluentValidationValidator />
    <MudDialog>
        <DialogContent>
            <MudTextField @bind-Value="@_request.Name"
                Label="Name"
                Variant="Variant.Outlined"
                Adornment="Adornment.Start"
                InputType="@InputType.Text"
                For="@(()=>_request.Name)"
                AutoFocus="true" />

        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="Color.Primary"
                Variant="Variant.Filled"
                ButtonType="ButtonType.Submit"
                Disabled="@_isLoading">Ok</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {

    [CascadingParameter]
    private MudDialogInstance _dialogInstance { get; set; }

    private OrganizationRequest _request { get; set; } = new();

    private bool _isLoading { get; set; } = false;

    private void Cancel() => _dialogInstance.Cancel();


    private async Task HandleSubmit()
    {
        _isLoading = true;

        var response = await _organizationAppState.CreateUserOrganization(_request);

        if (response.StatusCode == HttpStatusCode.Created)
        {

            _dialogInstance.Close(DialogResult.Ok(1));

            _isLoading = false;

            return;
        }

        _isLoading = false;
    }
}